-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/GammaCorrectionHDLExample/Pixel_Str_ip_src_Pixel_Stream_Gamma_Compensation.vhd
-- Created: 2017-11-05 13:15:12
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- pixelOut                      ce_out        1
-- ctrlOut_hStart                ce_out        1
-- ctrlOut_hEnd                  ce_out        1
-- ctrlOut_vStart                ce_out        1
-- ctrlOut_vEnd                  ce_out        1
-- ctrlOut_valid                 ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Pixel_Str_ip_src_Pixel_Stream_Gamma_Compensation
-- Source Path: GammaCorrectionHDLExample/Pixel-Stream Gamma Compensation
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Pixel_Str_ip_src_Pixel_Stream_Gamma_Compensation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        pixelIn                           :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        ctrlIn_hStart                     :   IN    std_logic;
        ctrlIn_hEnd                       :   IN    std_logic;
        ctrlIn_vStart                     :   IN    std_logic;
        ctrlIn_vEnd                       :   IN    std_logic;
        ctrlIn_valid                      :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        pixelOut                          :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        ctrlOut_hStart                    :   OUT   std_logic;
        ctrlOut_hEnd                      :   OUT   std_logic;
        ctrlOut_vStart                    :   OUT   std_logic;
        ctrlOut_vEnd                      :   OUT   std_logic;
        ctrlOut_valid                     :   OUT   std_logic
        );
END Pixel_Str_ip_src_Pixel_Stream_Gamma_Compensation;


ARCHITECTURE rtl OF Pixel_Str_ip_src_Pixel_Stream_Gamma_Compensation IS

  -- Component Declarations
  COMPONENT Pixel_Str_ip_src_Gamma_Corrector
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          in0                             :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          in1_hStart                      :   IN    std_logic;
          in1_hEnd                        :   IN    std_logic;
          in1_vStart                      :   IN    std_logic;
          in1_vEnd                        :   IN    std_logic;
          in1_valid                       :   IN    std_logic;
          out0                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          out1_hStart                     :   OUT   std_logic;
          out1_hEnd                       :   OUT   std_logic;
          out1_vStart                     :   OUT   std_logic;
          out1_vEnd                       :   OUT   std_logic;
          out1_valid                      :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Pixel_Str_ip_src_Gamma_Corrector
    USE ENTITY work.Pixel_Str_ip_src_Gamma_Corrector(rtl);

  -- Signals
  SIGNAL Gamma_Corrector_out1             : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Gamma_Corrector_out2_hStart      : std_logic;
  SIGNAL Gamma_Corrector_out2_hEnd        : std_logic;
  SIGNAL Gamma_Corrector_out2_vStart      : std_logic;
  SIGNAL Gamma_Corrector_out2_vEnd        : std_logic;
  SIGNAL Gamma_Corrector_out2_valid       : std_logic;

BEGIN
  u_Gamma_Corrector : Pixel_Str_ip_src_Gamma_Corrector
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              in0 => pixelIn,  -- uint8
              in1_hStart => ctrlIn_hStart,
              in1_hEnd => ctrlIn_hEnd,
              in1_vStart => ctrlIn_vStart,
              in1_vEnd => ctrlIn_vEnd,
              in1_valid => ctrlIn_valid,
              out0 => Gamma_Corrector_out1,  -- uint8
              out1_hStart => Gamma_Corrector_out2_hStart,
              out1_hEnd => Gamma_Corrector_out2_hEnd,
              out1_vStart => Gamma_Corrector_out2_vStart,
              out1_vEnd => Gamma_Corrector_out2_vEnd,
              out1_valid => Gamma_Corrector_out2_valid
              );

  ce_out <= clk_enable;

  pixelOut <= Gamma_Corrector_out1;

  ctrlOut_hStart <= Gamma_Corrector_out2_hStart;

  ctrlOut_hEnd <= Gamma_Corrector_out2_hEnd;

  ctrlOut_vStart <= Gamma_Corrector_out2_vStart;

  ctrlOut_vEnd <= Gamma_Corrector_out2_vEnd;

  ctrlOut_valid <= Gamma_Corrector_out2_valid;

END rtl;

